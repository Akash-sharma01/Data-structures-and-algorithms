#include<iostream>
using namespace std;
int lsearch(int a[],int n,int item)
{
    int i;
    for(i=0;i<n;i++)
    {
        if(a[i]==item)return i;
    }
    return -1;
}
int bsearch(int a[],int n,int item)
{
    int i,mid,beg=0,end=n-1;
    while(beg<=end)
    {
        mid=(beg+end)/2;
        if(a[mid]==item)return mid;
        else if (item>a[mid]) beg=mid+1;
        else end=mid-1;
    }
    return -1;
}

int lbound(int a[],int n,int item)
{
    int i,mid,beg=0,end=n-1,ans=-1;
    while(beg<=end)
    {
        mid=(beg+end)/2;
        if(a[mid]==item)
        {
            ans=mid;
            end=mid-1;
        }
        else if (item>a[mid]) beg=mid+1;
        else end=mid-1;
    }
    return ans;
}
int ubound(int a[],int n,int item)
{
    int i,mid,beg=0,end=n-1,ans=-1;
    while(beg<=end)
    {
        mid=(beg+end)/2;
        if(a[mid]==item)
        {
            ans=mid;
            beg=mid+1;
        }
        else if (item>a[mid]) beg=mid+1;
        else end=mid-1;
    }
    return ans;
}

int main()
{
    int a[5],item,p,n,i,q;
    cin>>n;
    cout<<"enter elements";
    for(i=0;i<n;i++)
    {
        cin>>a[i];
    }
    p=lbound(a,5,1);
   if(p>=0)
   cout<<p; 
   else
  cout<<"not found"<<p;
      q=ubound(a,5,1);
   if(q>=0)
   cout<<q; 
   else
  cout<<"not found"<<q;
  cout<<"total number of occurences"<<(q-p)+1;
}
    
